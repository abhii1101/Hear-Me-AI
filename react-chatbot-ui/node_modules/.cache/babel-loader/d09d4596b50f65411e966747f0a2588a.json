{"ast":null,"code":"import axios from 'axios';\nconst API = {\n  GetChatbotResponse: async message => {\n    /*return new Promise(async function(resolve, reject) {\n      if (message === \"hi\") \n        resolve(\"Welcome to chatbot!\");\n      else {\n        debugger;\n        const response = await axios.get('http://localhost:8080/api/chatbot/send?message='+message);\n        if (response.status === 200){\n          resolve(response.data);\n        }\n        else{\n          reject(\"Chatbot service unavailable. Please try again later.\");\n        }\n      }\n    });*/\n\n    try {\n      let returnmessage = \"\";\n      if (message === \"hi\") {\n        returnmessage = \"Welcome to chatbot!\";\n        //resolve(returnmessage);\n      } else {\n        debugger;\n        const response = await axios.get('http://localhost:8080/api/chatbot', message);\n        if (response.status === 200) {\n          returnmessage = response.data;\n          //resolve(response.data);\n        } else {\n          returnmessage = \"Chatbot service unavailable. Please try again later.\";\n          //reject(\"Chatbot service unavailable. Please try again later.\");\n        }\n      }\n      return returnmessage;\n    } catch (error) {\n      console.error(\"Error:\" + error);\n    }\n  }\n};\nexport default API;","map":{"version":3,"names":["axios","API","GetChatbotResponse","message","returnmessage","response","get","status","data","error","console"],"sources":["/Users/abhircha/Desktop/react-chatbot-ui/src/ChatbotAPI.js"],"sourcesContent":["import axios from 'axios';\nconst API = {\n  GetChatbotResponse: async message => {\n    /*return new Promise(async function(resolve, reject) {\n      if (message === \"hi\") \n        resolve(\"Welcome to chatbot!\");\n      else {\n        debugger;\n        const response = await axios.get('http://localhost:8080/api/chatbot/send?message='+message);\n        if (response.status === 200){\n          resolve(response.data);\n        }\n        else{\n          reject(\"Chatbot service unavailable. Please try again later.\");\n        }\n      }\n    });*/\n\n    try{\n      let returnmessage=\"\";\n      if (message === \"hi\") {\n        returnmessage=\"Welcome to chatbot!\";\n        //resolve(returnmessage);\n      }\n      else {\n        debugger;\n        const response = await axios.get('http://localhost:8080/api/chatbot',message);\n        if (response.status === 200){\n          returnmessage=response.data;\n          //resolve(response.data);\n        }\n        else{\n          returnmessage=\"Chatbot service unavailable. Please try again later.\";\n          //reject(\"Chatbot service unavailable. Please try again later.\");\n        }\n      }\n      return returnmessage;\n    }\n    catch(error){\n      console.error(\"Error:\"+error);\n    }\n  }\n};\n\nexport default API;\n\n\n\n\n\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,GAAG,GAAG;EACVC,kBAAkB,EAAE,MAAMC,OAAO,IAAI;IACnC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEI,IAAG;MACD,IAAIC,aAAa,GAAC,EAAE;MACpB,IAAID,OAAO,KAAK,IAAI,EAAE;QACpBC,aAAa,GAAC,qBAAqB;QACnC;MACF,CAAC,MACI;QACH;QACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,mCAAmC,EAACH,OAAO,CAAC;QAC7E,IAAIE,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAC;UAC1BH,aAAa,GAACC,QAAQ,CAACG,IAAI;UAC3B;QACF,CAAC,MACG;UACFJ,aAAa,GAAC,sDAAsD;UACpE;QACF;MACF;MACA,OAAOA,aAAa;IACtB,CAAC,CACD,OAAMK,KAAK,EAAC;MACVC,OAAO,CAACD,KAAK,CAAC,QAAQ,GAACA,KAAK,CAAC;IAC/B;EACF;AACF,CAAC;AAED,eAAeR,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}